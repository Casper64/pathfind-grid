var pf=function(){var defines={},entry=[null];function define(name,dependencies,factory){defines[name]={dependencies:dependencies,factory:factory},entry[0]=name}function get_define(name){return defines[name]?defines[name]:defines[name+"/index"]?defines[name+"/index"]:{dependencies:["exports"],factory:function(exports){try{Object.defineProperty(exports,"__cjsModule",{value:!0}),Object.defineProperty(exports,"default",{value:require(name)})}catch(_a){throw Error(['module "',name,'" not found.'].join(""))}}};var dependencies,factory}define("require",["exports"],(function(exports){Object.defineProperty(exports,"__cjsModule",{value:!0}),Object.defineProperty(exports,"default",{value:function(name){return resolve(name)}})})),define("graph",["require","exports"],(function(require,exports){"use strict";exports.__esModule=!0;var Graph=function(){function Graph(x,y,solid,movementCost){void 0===movementCost&&(movementCost=1),this.x=x,this.y=y,this.coord=x+":"+y,this.solid=solid,this.movementCost=movementCost}return Graph}();exports.Graph=Graph})),define("grid",["require","exports","graph"],(function(require,exports,graph_1){"use strict";exports.__esModule=!0;var Grid=function(){function Grid(width,height){this.matrix=[],this.map=[],this.width=width,this.height=height,this.matrix=new Array(height).fill(new Array(width).fill(0)),this.fill(this.matrix)}return Grid.prototype.get=function(x,y){return this.map[y][x]},Grid.prototype.set=function(x,y,value){this.map[y][x]=value},Grid.prototype.setSolid=function(x,y,solid){this.matrix[y][x]=Number(solid),this.map[y][x].solid=solid},Grid.prototype.fill=function(matrix){for(var empty=0==this.map.length,y=0;y<matrix.length;y++){empty?this.map.push([]):this.map[y].length=0;for(var x=0;x<matrix[y].length;x++){var node=new graph_1.Graph(x,y,Boolean(matrix[y][x]));this.map[y].push(node)}}},Grid.prototype.random=function(chance){var _this=this;return void 0===chance&&(chance=.7),this.matrix.forEach((function(row,y){row.forEach((function(val,x){var v=Number(Math.random()>chance);v?_this.setSolid(x,y,!0):_this.setSolid(x,y,!1),_this.matrix[y][x]=v}))})),this.matrix},Grid}();exports.Grid=Grid})),define("util",["require","exports"],(function(require,exports){"use strict";exports.__esModule=!0,exports.h=["manhattan","octile","eucledian","chebyshev"]})),define("algorithms/astar",["require","exports"],(function(require,exports){"use strict";exports.__esModule=!0;var AStar=function(){function AStar(options){void 0===options&&(options={}),this.diagonalCost=1,this.diagonal=options.diagonal||!1,this.heuristic=options.heuristic||"manhattan",this.passDiagonal=options.passDiagonal||!1,this.bidirectional=options.bidirectional||!1,options.smoothenPath&&(this.diagonalCost=Math.SQRT2)}return AStar.prototype.findPath=function(start,end,grid){var _this=this;if(this.bidirectional)return this.findPathbs(start,end,grid);var current=grid.get(start.x,start.y),open=[current],closed=[],f_score={},cost_so_far={},came_from={},neighbours=[],sc=start.x+":"+start.y,ec=end.x+":"+end.y;for(f_score[sc]=0,cost_so_far[sc]=0;open.length>0;){if(closed.push(current),(current=open.pop()).coord===ec){for(var path=[],nodes=[];current.coord!=sc;)path.push({x:current.x,y:current.y}),nodes.push(current),current=came_from[current.coord];path.push({x:start.x,y:start.y}),nodes.push(grid.get(start.x,start.y)),path.reverse(),nodes.reverse();var length_1=path.length;return{path:path,nodes:nodes,open:open,closed:closed,length:length_1}}(neighbours=this.getNeighbours(current,ec,grid)).forEach((function(n,index){var next=n[0],new_cost=cost_so_far[current.coord]+next.movementCost+(n[1]>3?_this.diagonalCost-1:0);if(void 0===cost_so_far[next.coord]||new_cost<cost_so_far[next.coord]){var h=_this.hvalue(end,next);cost_so_far[next.coord]=new_cost,f_score[next.coord]=new_cost+h,came_from[next.coord]=current,open.insertSorted(next,(function(b,a){return f_score[a.coord]-f_score[b.coord]}))}}))}return{path:[],nodes:[],open:open,closed:closed,length:0}},AStar.prototype.findPathbs=function(start,end,grid){var _this=this,current=[grid.get(start.x,start.y),grid.get(end.x,end.y)],open=[[],[]],closed=[],f_score=[{},{}],g_score=[{},{}],came_from=[{},{}],sc=start.x+":"+start.y,ec=end.x+":"+end.y,neighbours=[[],[]];for(f_score[0][sc]=0,f_score[1][ec]=0,g_score[0][sc]=0,g_score[1][ec]=0,open=[[grid.get(start.x,start.y)],[grid.get(end.x,end.y)]];open[0].length>0&&open[1].length>0;){if(closed.push(current[0],current[1]),current=[open[0].pop(),open[1].pop()],void 0!==came_from[0][current[1].coord]||void 0!==came_from[1][current[0].coord]){for(var d=Number(void 0!==came_from[0][current[1].coord]),path=[],nodes=[],path2=[],connecting={x:current[d].x,y:current[d].y};current[d];)path.push({x:current[d].x,y:current[d].y}),current[d]=came_from[1-d][current[d].coord];for(current[1-d]=grid.get(connecting.x,connecting.y);current[1-d];)path2.push({x:current[1-d].x,y:current[1-d].y}),current[1-d]=came_from[d][current[1-d].coord];path.reverse(),path.pop(),path.push.apply(path,path2);var newOpen_1=[];return newOpen_1.push.apply(newOpen_1,open[0]),newOpen_1.push.apply(newOpen_1,open[1]),{path:path,nodes:[],open:newOpen_1,closed:closed,length:0}}(neighbours=[this.getNeighbours(current[0],ec,grid),this.getNeighbours(current[1],sc,grid)]).forEach((function(direction,d){direction.forEach((function(n){var next=n[0],nc=g_score[d][current[d].coord]+next.movementCost+(n[1]>3?_this.diagonalCost-1:0);if(void 0===g_score[d][next.coord]||nc<g_score[d][next.coord]){var h=_this.hvalue(current[1-d],next);g_score[d][next.coord]=nc,f_score[d][next.coord]=nc+h+g_score[1-d][current[1-d].coord],came_from[d][next.coord]=current[d],open[d].insertSorted(next,(function(b,a){return f_score[d][a.coord]-f_score[d][b.coord]}))}}))}))}var newOpen=[];return newOpen.push.apply(newOpen,open[0]),newOpen.push.apply(newOpen,open[1]),{path:[],nodes:[],open:newOpen,closed:closed,length:0}},AStar.prototype.hvalue=function(end,node){var result=0;if("octile"==this.heuristic){var D=1,D2=Math.SQRT2,dx,dy;result=D*((dx=Math.abs(node.x-end.x))+(dy=Math.abs(node.y-end.y)))+(D2-2*D)*Math.min(dx,dy)}else if("eucledian"==this.heuristic){var D=1,dx=Math.abs(node.x-end.x),dy=Math.abs(node.y-end.y);result=D*Math.sqrt(dx*dx+dy*dy)}else if("chebyshev"==this.heuristic){var D,D2=1,dx,dy;result=(D=1)*((dx=Math.abs(node.x-end.x))+(dy=Math.abs(node.y-end.y)))+(D2-2*D)*Math.min(dx,dy)}else result=Math.abs(end.x-node.x)+Math.abs(end.y-node.y);return result},AStar.prototype.getNeighbours=function(node,end,grid){for(var nodes=[],dir=[[1,0],[0,1],[-1,0],[0,-1],[1,1],[1,-1],[-1,1],[-1,-1]],d=0;d<(this.diagonal?8:4);d++)if(!(node.x+dir[d][0]>grid.width-1||node.x+dir[d][0]<0||node.y+dir[d][1]>grid.height-1||node.y+dir[d][1]<0||!this.passDiagonal&&d>3&&grid.get(node.x+dir[d][0],node.y).solid&&grid.get(node.x,node.y+dir[d][1]).solid)){var next=grid.get(node.x+dir[d][0],node.y+dir[d][1]);next.solid&&next.coord!==end||nodes.push([next,d])}return nodes},AStar}();exports.AStar=AStar,Array.prototype.insertSorted=function(v,sortFunction){if(this.length<1||sortFunction(v,this[this.length-1])>=0)return this.push(v),this;for(var i=this.length-2;i>=0;i--)if(sortFunction(v,this[i])>=0)return this.splice(i+1,0,v),this;return this.splice(0,0,v),this}})),define("algorithms/bfs",["require","exports"],(function(require,exports){"use strict";exports.__esModule=!0;var BFS=function(){function BFS(options){void 0===options&&(options={}),this.diagonal=options.diagonal||!1,this.heuristic=options.heuristic||"manhattan",this.passDiagonal=options.passDiagonal||!1,this.bidirectional=options.bidirectional||!1}return BFS.prototype.findPath=function(start,end,grid){var _this=this;if(this.bidirectional)return this.findPathbs(start,end,grid);var current=grid.get(start.x,start.y),open=[current],closed=[],came_from={},cost_so_far={},neighbours=[],sc=start.x+":"+start.y,ec=end.x+":"+end.y;for(cost_so_far[sc]=0;open.length>0;){if(closed.push(current),(current=open.pop()).coord===ec){for(var path=[],nodes=[];current.coord!=sc;)path.push({x:current.x,y:current.y}),nodes.push(current),current=came_from[current.coord];path.push({x:start.x,y:start.y}),nodes.push(grid.get(start.x,start.y)),path.reverse(),nodes.reverse();var length_2=path.length;return{path:path,nodes:nodes,open:open,closed:closed,length:length_2}}(neighbours=this.getNeighbours(current,ec,grid)).forEach((function(n,index){var next=n[0],new_cost=_this.hvalue(end,next);(void 0===cost_so_far[next.coord]||new_cost<cost_so_far[next.coord])&&(cost_so_far[next.coord]=new_cost,came_from[next.coord]=current,open.insertSorted(next,(function(b,a){return cost_so_far[a.coord]-cost_so_far[b.coord]})))}))}return{path:[],nodes:[],open:open,closed:closed,length:0}},BFS.prototype.findPathbs=function(start,end,grid){var _this=this,current=[grid.get(start.x,start.y),grid.get(end.x,end.y)],open=[[],[]],closed=[],cost_so_far=[{},{}],came_from=[{},{}],neighbours=[[],[]],sc=start.x+":"+start.y,ec=end.x+":"+end.y;for(cost_so_far[0][sc]=0,cost_so_far[1][ec]=0,open=[[grid.get(start.x,start.y)],[grid.get(end.x,end.y)]];open[0].length>0&&open[1].length>0;){if(closed.push(current[0],current[1]),current=[open[0].pop(),open[1].pop()],void 0!==came_from[0][current[1].coord]||void 0!==came_from[1][current[0].coord]){for(var d=Number(void 0!==came_from[0][current[1].coord]),path=[],nodes=[],path2=[],connecting={x:current[d].x,y:current[d].y};current[d];)path.push({x:current[d].x,y:current[d].y}),current[d]=came_from[1-d][current[d].coord];for(current[1-d]=grid.get(connecting.x,connecting.y);current[1-d];)path2.push({x:current[1-d].x,y:current[1-d].y}),current[1-d]=came_from[d][current[1-d].coord];path.reverse(),path.push.apply(path,path2);var newOpen_2=[];return newOpen_2.push.apply(newOpen_2,open[0]),newOpen_2.push.apply(newOpen_2,open[1]),{path:path,nodes:[],open:newOpen_2,closed:closed,length:0}}(neighbours=[this.getNeighbours(current[0],ec,grid),this.getNeighbours(current[1],sc,grid)]).forEach((function(direction,d){direction.forEach((function(n){var next=n[0],new_cost=_this.hvalue(0==d?end:start,next);(void 0===cost_so_far[d][next.coord]||new_cost<cost_so_far[d][next.coord])&&(cost_so_far[d][next.coord]=new_cost,came_from[d][next.coord]=current[d],open[d].insertSorted(next,(function(b,a){return cost_so_far[d][a.coord]-cost_so_far[d][b.coord]})))}))}))}var newOpen=[];return newOpen.push.apply(newOpen,open[0]),newOpen.push.apply(newOpen,open[1]),{path:[],nodes:[],open:newOpen,closed:closed,length:0}},BFS.prototype.hvalue=function(end,node){var result=0;if("octile"==this.heuristic){var D=1,D2=Math.SQRT2,dx,dy;result=D*((dx=Math.abs(node.x-end.x))+(dy=Math.abs(node.y-end.y)))+(D2-2*D)*Math.min(dx,dy)}else if("eucledian"==this.heuristic){var D=1,dx=Math.abs(node.x-end.x),dy=Math.abs(node.y-end.y);result=D*Math.sqrt(dx*dx+dy*dy)}else if("chebyshev"==this.heuristic){var D,D2=1,dx,dy;result=(D=1)*((dx=Math.abs(node.x-end.x))+(dy=Math.abs(node.y-end.y)))+(D2-2*D)*Math.min(dx,dy)}else result=Math.abs(end.x-node.x)+Math.abs(end.y-node.y);return result},BFS.prototype.getNeighbours=function(node,end,grid){for(var nodes=[],dir=[[1,0],[0,1],[-1,0],[0,-1],[1,1],[1,-1],[-1,1],[-1,-1]],d=0;d<(this.diagonal?8:4);d++)if(!(node.x+dir[d][0]>grid.width-1||node.x+dir[d][0]<0||node.y+dir[d][1]>grid.height-1||node.y+dir[d][1]<0||!this.passDiagonal&&d>3&&grid.get(node.x+dir[d][0],node.y).solid&&grid.get(node.x,node.y+dir[d][1]).solid)){var next=grid.get(node.x+dir[d][0],node.y+dir[d][1]);next.solid&&next.coord!==end||nodes.push([next,d])}return nodes},BFS}();exports.BFS=BFS,Array.prototype.insertSorted=function(v,sortFunction){if(this.length<1||sortFunction(v,this[this.length-1])>=0)return this.push(v),this;for(var i=this.length-2;i>=0;i--)if(sortFunction(v,this[i])>=0)return this.splice(i+1,0,v),this;return this.splice(0,0,v),this}})),define("algorithms/dijkstra",["require","exports"],(function(require,exports){"use strict";exports.__esModule=!0;var Dijkstra=function(){function Dijkstra(options){void 0===options&&(options={}),this.diagonalCost=1,this.diagonal=options.diagonal||!1,this.passDiagonal=options.passDiagonal||!1,options.smoothenPath&&(this.diagonalCost=Math.SQRT2),this.bidirectional=options.bidirectional||!1}return Dijkstra.prototype.findPath=function(start,end,grid){var _this=this;if(this.bidirectional)return this.findPathbs(start,end,grid);var current=grid.get(start.x,start.y),open=[current],closed=[],came_from={},cost_so_far={},neighbours=[],sc=start.x+":"+start.y,ec=end.x+":"+end.y;for(cost_so_far[sc]=0;open.length>0;){if(closed.push(current),(current=open.pop()).coord===ec){for(var path=[],nodes=[];current.coord!=sc;)path.push({x:current.x,y:current.y}),nodes.push(current),current=came_from[current.coord];path.push({x:start.x,y:start.y}),nodes.push(grid.get(start.x,start.y)),path.reverse(),nodes.reverse();var length_3=path.length;return{path:path,nodes:nodes,open:open,closed:closed,length:length_3}}(neighbours=this.getNeighbours(current,ec,grid)).forEach((function(n){var next=n[0],new_cost=cost_so_far[current.coord]+next.movementCost+(n[1]>3?_this.diagonalCost-1:0);(void 0===cost_so_far[next.coord]||new_cost<cost_so_far[next.coord])&&(cost_so_far[next.coord]=new_cost,came_from[next.coord]=current,open.insertSorted(next,(function(b,a){return cost_so_far[a.coord]-cost_so_far[b.coord]})))}))}return{path:[],nodes:[],open:open,closed:closed,length:0}},Dijkstra.prototype.findPathbs=function(start,end,grid){var _this=this,current=[grid.get(start.x,start.y),grid.get(end.x,end.y)],open=[[],[]],closed=[],cost_so_far=[{},{}],came_from=[{},{}],neighbours=[[],[]],sc=start.x+":"+start.y,ec=end.x+":"+end.y;for(cost_so_far[0][sc]=0,cost_so_far[1][ec]=0,open=[[grid.get(start.x,start.y)],[grid.get(end.x,end.y)]];open[0].length>0&&open[1].length>0;){if(closed.push(current[0],current[1]),current=[open[0].pop(),open[1].pop()],void 0!==came_from[0][current[1].coord]||void 0!==came_from[1][current[0].coord]){for(var d=Number(void 0!==came_from[0][current[1].coord]),path=[],nodes=[],path2=[],connecting={x:current[d].x,y:current[d].y};current[d];)path.push({x:current[d].x,y:current[d].y}),current[d]=came_from[1-d][current[d].coord];for(current[1-d]=grid.get(connecting.x,connecting.y);current[1-d];)path2.push({x:current[1-d].x,y:current[1-d].y}),current[1-d]=came_from[d][current[1-d].coord];path.reverse(),path.push.apply(path,path2);var newOpen_3=[];return newOpen_3.push.apply(newOpen_3,open[0]),newOpen_3.push.apply(newOpen_3,open[1]),{path:path,nodes:[],open:newOpen_3,closed:closed,length:0}}(neighbours=[this.getNeighbours(current[0],ec,grid),this.getNeighbours(current[1],sc,grid)]).forEach((function(direction,d){direction.forEach((function(n){var next=n[0],new_cost=cost_so_far[d][current[d].coord]+next.movementCost+(n[1]>3?_this.diagonalCost-1:0);(void 0===cost_so_far[d][next.coord]||new_cost<cost_so_far[d][next.coord])&&(cost_so_far[d][next.coord]=new_cost,came_from[d][next.coord]=current[d],open[d].insertSorted(next,(function(b,a){return cost_so_far[d][a.coord]-cost_so_far[d][b.coord]})))}))}))}var newOpen=[];return newOpen.push.apply(newOpen,open[0]),newOpen.push.apply(newOpen,open[1]),{path:[],nodes:[],open:newOpen,closed:closed,length:0}},Dijkstra.prototype.getNeighbours=function(node,end,grid){for(var nodes=[],dir=[[1,0],[0,1],[-1,0],[0,-1],[1,1],[1,-1],[-1,1],[-1,-1]],d=0;d<(this.diagonal?8:4);d++)if(!(node.x+dir[d][0]>grid.width-1||node.x+dir[d][0]<0||node.y+dir[d][1]>grid.height-1||node.y+dir[d][1]<0||!this.passDiagonal&&d>3&&grid.get(node.x+dir[d][0],node.y).solid&&grid.get(node.x,node.y+dir[d][1]).solid)){var next=grid.get(node.x+dir[d][0],node.y+dir[d][1]);next.solid&&next.coord!==end||nodes.push([next,d])}return nodes},Dijkstra}();exports.Dijkstra=Dijkstra,Array.prototype.insertSorted=function(v,sortFunction){if(this.length<1||sortFunction(v,this[this.length-1])>=0)return this.push(v),this;for(var i=this.length-2;i>=0;i--)if(sortFunction(v,this[i])>=0)return this.splice(i+1,0,v),this;return this.splice(0,0,v),this}})),define("index",["require","exports","grid","graph","util","algorithms/astar","algorithms/bfs","algorithms/dijkstra"],(function(require,exports,grid_1,graph_2,util_1,astar_1,bfs_1,dijkstra_1){"use strict";function __export(m){for(var p in m)exports.hasOwnProperty(p)||(exports[p]=m[p])}exports.__esModule=!0,__export(grid_1),__export(graph_2),__export(util_1),__export(astar_1),__export(bfs_1),__export(dijkstra_1)}));var instances={};function resolve(name){if(instances[name])return instances[name];if("exports"===name)return{};var define=get_define(name);instances[name]={};var dependencies=define.dependencies.map((function(name){return resolve(name)}));define.factory.apply(define,dependencies);var exports=dependencies[define.dependencies.indexOf("exports")];return instances[name]=exports.__cjsModule?exports.default:exports,instances[name]}if(null!==entry[0])return resolve(entry[0])}();